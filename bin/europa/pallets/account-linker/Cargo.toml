[package]
authors = ['Litentry Dev']
description = 'FRAME pallet template for defining custom runtime logic.'
edition = '2018'
homepage = 'https://litentry.com'
license = 'Unlicense'
name = 'pallet-account-linker'
repository = 'https://github.com/litentry/litentry-account-linker'
version = '0.0.1'

[package.metadata.docs.rs]
targets = ['x86_64-unknown-linux-gnu']

# alias "parity-scale-code" to "codec"
[dependencies.codec]
default-features = false
features = ['derive']
package = 'parity-scale-codec'
version = '2.0.0'

[dependencies]
frame-support = { default-features = false, version = '3.0.0',git = "https://github.com/paritytech/substrate", branch = "master"}
frame-system = { default-features = false, version = '3.0.0',git = "https://github.com/paritytech/substrate", branch = "master" }
sp-io = { default-features = false, version = '3.0.0', git = "https://github.com/paritytech/substrate",branch = "master" }
sp-std = { default-features = false, version = '3.0.0', git = "https://github.com/paritytech/substrate",branch = "master" }
sha2 = { default-features = false, version = "0.9.2" }
ripemd160 = {default-features = false, version = "0.9.1" }
sp-runtime = { default-features = false, version = '3.0.0', git = "https://github.com/paritytech/substrate",branch = "master",  optional = true }
sp-core = {default-features = false,  version = '3.0.0', git = "https://github.com/paritytech/substrate", branch = "master", optional = true }

[dev-dependencies]
sp-core = { default-features = false, version = '3.0.0', git = "https://github.com/paritytech/substrate",branch = "master"}
sp-runtime = { default-features = false, version = '3.0.0', git = "https://github.com/paritytech/substrate",branch = "master" }
parity-crypto = {version = "0.4.0", features = ["publickey"] }
bitcoin = { version = "0.25.2", features = ["rand"] }
serde = { version = "1.0.119" }
hex = "0.4.2"

[features]
default = ['std']
std = [
    'codec/std',
    'frame-support/std',
    'frame-system/std',
    "sp-io/std",
    "sp-std/std",
    "sha2/std",
    "ripemd160/std",
]
